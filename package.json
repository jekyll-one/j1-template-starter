{
  "private": true,
  "name": "j1",
  "version": "2024.1.5",
  "description": "J1 Starter Web",
  "homepage": "https://your.site",
  "author": {
    "name": "Your Name",
    "email": "name@mail.site",
    "url": "https://your.site"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/jekyll-one/j1-template-starter/issues"
  },
  "config": {
    "jekyll_app_interface": "0.0.0.0",
    "jekyll_app_port": "22010",
    "jekyll_app_url": "http://localhost:22010/",
    "jekyll_config_file": "_config.yml",
    "jekyll_port": "22000",
    "jekyll_livereload_port": "22001",
    "jekyll_option_livereload": "--livereload",
    "jekyll_option_watch": "--watch",
    "jekyll_option_initial_build": "--skip-initial-build",
    "jekyll_option_incremental": "--incremental",
    "ruby_gemfile": "Gemfile",
    "ruby_userize": "true",
    "ruby_vendorize": "true",
    "mode": "production",
    "loglevel": "silent"
  },
  "engines": {
    "node": ">=16",
    "npm": ">=8",
    "yarn": ">=1.22"
  },
  "keywords": [
    "Jekyll",
    "One",
    "Server",
    "Web",
    "Site"
  ],
  "scripts": {
    "app": "run-p -s app:*",
    "app:rackup": "cross-env INTERFACE=$npm_package_config_jekyll_app_interface PORT=$npm_package_config_jekyll_app_port bundle exec puma -C _data/puma/config.rb",
    "app:open": "npm run delay-3s && cross-var open-cli $npm_package_config_jekyll_app_url",
    "build": "run-s -s build:*",
    "build:info": "echo Build site incremental ..",
    "build:do": "bundle exec jekyll b --incremental",
    "postbuild": "run-s -s postbuild:*",
    "postbuild:finished": "echo .. build finished.",
    "postbuild:hint": "echo To open the site, run: yarn site",
    "bundle": "run-s -s bundler:*",
    "bundler:info": "echo Create bundle ..",
    "bundler:clean": "shx rm -f Gemfile.lock",
    "bundler:check": "cross-var BUNDLE_VENDORIZE=$npm_package_config_ruby_vendorize if-env BUNDLE_VENDORIZE=true && run-s -s bundle_vendor:* || run-s -s bundle_system:*",
    "bundle_system:info": "echo Bundle Rubies using system path ..",
    "bundle_system:set-path": "bundle config set --local system true",
    "bundle_system:bundle": "cross-var BUNDLE_GEMFILE=$npm_package_config_ruby_gemfile bundle install",
    "bundle_vendor:info": "echo Bundle Rubies using vendor path ..",
    "bundle_vendor:set-path": "bundle config set --local path ./vendor",
    "bundle_vendor:bundle": "bundle install",
    "clean": "run-s -s clean-site && run-s clean:*",
    "clean-site": "echo Clean up site files .. && bundle exec jekyll clean",
    "clean:start": "echo Clean up projects files ..",
    "clean:bundle-config-folder": "echo Remove bundle config folder .. && shx rm -rf .bundle",
    "clean:log-folder": "echo Remove log folder .. && shx rm -rf log",
    "clean:etc-folder": "echo Remove etc folder .. && shx rm -rf etc",
    "clean:logfiles": "echo Remove various log files .. && shx rm -f *.log",
    "clean:locks": "echo Remove lock files .. && shx rm -f *.lock && shx rm -f package-lock.json",
    "delay-1s": "node ./node_modules/npm-delay 1000",
    "delay-2s": "node ./node_modules/npm-delay 2000",
    "delay-3s": "node ./node_modules/npm-delay 3000",
    "delay-5s": "node ./node_modules/npm-delay 5000",
    "j1-app": "run-p -s app:*",
    "j1-site": "run-p -s j1-site:*",
    "j1-site:jekyll": "echo Startup the site .. && cross-var bundle exec jekyll serve --config $npm_package_config_jekyll_config_file --port $npm_package_config_jekyll_port --livereload-port $npm_package_config_jekyll_livereload_port $npm_package_config_jekyll_option_incremental $npm_package_config_jekyll_option_livereload $npm_package_config_jekyll_option_initial_build $npm_package_config_jekyll_option_watch --open 2>jekyll.log",
    "rebuild": "run-s -s rebuild:* && run-s -s post-rebuild:*",
    "rebuild:info": "echo Rebuild site incremental ..",
    "rebuild:clean": "echo Clean up site files .. && bundle exec jekyll clean",
    "rebuild:do": "bundle exec jekyll b --incremental",
    "post-rebuild": "run-s -s postrebuild:*",
    "post-rebuild:finished": "echo .. rebuild finished.",
    "post-rebuild:hint": "echo To open the site, run: yarn site",
    "reset": "run-s -s reset:*",
    "reset:start": "echo Reset project to factory state ..",
    "reset:base-clean-files": "echo Cleaning up .. && npm --silent run clean",
    "reset:finished": "echo done.",
    "setup": "npm --silent run setup-start && npm --silent run setup-base && run-s -s setup:*",
    "setup-start": "echo Setup project for first use ..",
    "setup-base": "echo Bootstrap base modules .. && echo J1 Project Base modules: > install.log && npm --silent install shx npm-run-all cross-var cross-env >> install.log && echo done.",
    "setup:env": "echo Configure environment .. && run-s -s set-env:*",
    "set-env:loglevel": "cross-var npm config set jekyll_one_com:loglevel  $npm_package_config_loglevel",
    "set-env:mode": "cross-var npm config set jekyll_one_com:mode $npm_package_config_mode && echo done.",
    "setup:create-folders": "echo Create project folders ..",
    "setup:create-log-folder": "echo Create log folder .. && shx mkdir ./log",
    "setup:create-log-archived-folder": "echo Create archived log folder .. && shx mkdir ./log/archived",
    "setup:create-etc-folder": "echo Create etc folder .. && shx mkdir ./etc && echo done.",
    "setup:node-modules-base": "echo Bootstrap project modules .. && echo J1 Project modules: >> install.log && npm --silent install >> install.log",
    "setup:detect-os": "echo Detect OS .. && cross-var if-env OS=Windows_NT && cross-var echo \"OS detected: $OS\" || OS=$(echo $(getos)) && echo \"OS detected: $OS\" && echo done.",
    "setup:site": "run-s -s build"
  },
  "dependencies": {
    "cross-env": "^7.0.3",
    "cross-var": "^1.1.0",
    "getos": "^3.2.1",
    "getos-cli": "^1.0.0",
    "if-env": "^1.0.4",
    "npm-delay": "^1.0.4",
    "npm-run-all": "^4.1.5",
    "open-cli": "^7.0.1",
    "shx": "^0.3.4"
  }
}
